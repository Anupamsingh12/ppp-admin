{"version":3,"file":"static/js/426.e761c7a1.chunk.js","mappings":"uqEAKA,MAAM,aAAEA,GAAiBC,EAAQ,KAyFjC,QA7EA,WACE,MAAOC,EAAOC,IAAYC,EAAAA,EAAAA,UAAS,CACjCC,QAASC,EACTC,QAAS,EACTC,SAAU,KAEN,QAAEH,GAAYH,GACbO,EAASC,IAAcN,EAAAA,EAAAA,UAAS,IAwBvC,OAZAO,EAAAA,EAAAA,YAAU,KATRX,EAAa,CAAC,GACXY,MAAMC,IACK,IAADC,EAALD,GACFH,EAAc,OAAHG,QAAG,IAAHA,GAAS,QAANC,EAAHD,EAAKE,YAAI,IAAAD,OAAN,EAAHA,EAAWE,SACxB,IAEDC,OAAOC,GAAQC,QAAQC,IAAI,MAAOF,IAIrB,GACf,KAWDG,EAAAA,EAAAA,KAAAC,EAAAA,SAAA,CAAAC,UACEF,EAAAA,EAAAA,KAAA,QAAMG,UAAU,iFAAgFD,UAC9FE,EAAAA,EAAAA,MAACC,EAAAA,EAAG,CAACC,OAAQ,CAAC,GAAI,IAAKH,UAAU,WAAUD,SAAA,CACxCd,EAAQmB,KAAI,CAACC,EAAOC,KAAK,IAAAC,EAAA,OACxBV,EAAAA,EAAAA,KAACW,EAAAA,EAAG,CAACC,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAIC,GAAI,EAAEb,UACjCF,EAAAA,EAAAA,KAACgB,EAAAA,EAAQ,CAEPC,KAAM,CACJC,IAAKV,EAAMW,WACXC,MAAOZ,EAAMY,MACbC,QAASb,EAAMa,QACfC,OAAQd,EAAMc,OACdC,KAAMf,EAAMU,IACZM,KAAW,OAALhB,QAAK,IAALA,GAAgB,QAAXE,EAALF,EAAOiB,OAAO,UAAE,IAAAf,OAAX,EAALA,EAAkBc,KACxBE,YAAkB,OAALlB,QAAK,IAALA,OAAK,EAALA,EAAOkB,aAEtBC,MAAM,WAVDlB,IAFgCD,EAAMoB,IAczC,KAGR5B,EAAAA,EAAAA,KAACW,EAAAA,EAAG,CAACC,GAAI,GAAGV,UACVF,EAAAA,EAAAA,KAAAC,EAAAA,SAAA,YAqBZ,C","sources":["container/feed/index.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Row, Col, Pagination } from 'antd';\nimport courseData from '../../demoData/course.json';\nimport BlogCard from '../../components/cards/BlogCard';\nimport { PaginationStyle } from '../styled';\nconst { getHeadlines } = require('../../utility/services/headlines');\n\nconst PageRoutes = [\n  {\n    path: 'index',\n    breadcrumbName: 'Dashboard',\n  },\n  {\n    path: 'feed',\n    breadcrumbName: 'Feed',\n  },\n];\nfunction Course() {\n  const [state, setState] = useState({\n    courses: courseData,\n    current: 0,\n    pageSize: 0,\n  });\n  const { courses } = state;\n  const [allData, setAllData] = useState([]);\n\n  const getAllRoomList = () => {\n    getHeadlines({})\n      .then((res) => {\n        if (res) {\n          setAllData(res?.data?.articles);\n        }\n      })\n      .catch((err) => console.log('err', err));\n  };\n\n  useEffect(() => {\n    getAllRoomList();\n  }, []);\n\n  const onShowSizeChange = (current, pageSize) => {\n    setState({ ...state, current, pageSize });\n  };\n\n  const onHandleChange = (current, pageSize) => {\n    // You can create pagination in here\n    setState({ ...state, current, pageSize });\n  };\n  return (\n    <>\n      <main className=\"mt-1 min-h-[715px] lg:min-h-[580px] px-8 xl:px-[15px] pb-[30px] bg-transparent\">\n        <Row gutter={[16, 16]} className=\"mt-sm-10\">\n          {allData.map((value, index) => (\n            <Col xs={24} sm={12} md={12} lg={8} key={value._id}>\n              <BlogCard\n                key={index}\n                item={{\n                  url: value.urlToImage,\n                  title: value.title,\n                  content: value.content,\n                  author: value.author,\n                  link: value.url,\n                  name: value?.source[0]?.name,\n                  publishedAt: value?.publishedAt,\n                }}\n                theme=\"style-3\"\n              />\n            </Col>\n          ))}\n\n          <Col xs={24}>\n            <>\n              {/* {courseData.length ? (\n                <PaginationStyle>\n                  <div className=\"ant-pagination-custom-style text-end\">\n                    <Pagination\n                      onChange={onHandleChange}\n                      showSizeChanger\n                      onShowSizeChange={onShowSizeChange}\n                      pageSize={10}\n                      defaultCurrent={1}\n                      total={40}\n                    />\n                  </div>\n                </PaginationStyle>\n              ) : null} */}\n            </>\n          </Col>\n        </Row>\n      </main>\n    </>\n  );\n}\n\nexport default Course;\n"],"names":["getHeadlines","require","state","setState","useState","courses","courseData","current","pageSize","allData","setAllData","useEffect","then","res","_res$data","data","articles","catch","err","console","log","_jsx","_Fragment","children","className","_jsxs","Row","gutter","map","value","index","_value$source$","Col","xs","sm","md","lg","BlogCard","item","url","urlToImage","title","content","author","link","name","source","publishedAt","theme","_id"],"sourceRoot":""}