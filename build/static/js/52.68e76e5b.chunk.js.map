{"version":3,"file":"static/js/52.68e76e5b.chunk.js","mappings":"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","sources":["container/usersNew/AddUsers.jsx","utility/services/users.js","container/usersNew/index.jsx","components/page-headers/style.js","components/page-headers/page-headers.js","static/img/icon/home.svg","components/dropdown/dropdown-style.js","components/dropdown/dropdown.js","components/cards/frame/cards-frame.js"],"sourcesContent":["import { Button, Form, Input, Select, message, Row, Col, DatePicker, Spin } from 'antd';\nimport React, { useState, useEffect } from 'react';\nimport moment from 'moment';\nimport { addUser, getSingleUser, updateUser } from '../../utility/services/users';\nimport { getAllRoles } from '../../utility/services/roles';\nconst { Option } = Select;\n\nconst AddOrder = ({ setIsAddUsers, isEditUsers, setIsEditUsers, getAllUsers }) => {\n  const [loading, setLoading] = useState(false);\n  const [roomData, setRoomData] = useState([]);\n  const [roomIdData, setRoomIdData] = useState({});\n\n  const [form] = Form.useForm();\n\n  const onFinish = (values) => {\n    // console.log(values);\n\n    const body = values;\n    setLoading(true);\n    if (isEditUsers?.userId) {\n      updateUser({\n        id: isEditUsers?.userId,\n        body: body,\n      })\n        .then((res) => {\n          setIsEditUsers({ isOpen: false, userId: '' });\n          getAllUsers();\n          message.success('User updated successfully');\n        })\n        .catch((err) => {\n          message.error('Something Went Wrong');\n        });\n    } else {\n      addUser({\n        body: body,\n      })\n        ?.then((res) => {\n          message.success('User added successfully');\n          setIsAddUsers(false);\n          getAllUsers({ start: 0, limit: 10 });\n          setLoading(false);\n          //   console.log('res', res);\n        })\n        .catch((err) => {\n          message.error('Something Went Wrong');\n          console.log('err :>> ', err);\n          setLoading(false);\n        });\n    }\n  };\n\n  // useEffect(() => {\n  //   fetchRoomSuggestions();\n  // }, []);\n\n  useEffect(() => {\n    // populate single room data\n    if (isEditUsers?.userId) {\n      setLoading(true);\n      getSingleUser({ id: isEditUsers?.userId })\n        .then((res) => {\n          const data = res.data;\n          // data.dob = moment(data.dob);\n          //   console.log('data', data);\n          //   setRoomIdData({ option: data.roomNumber, value: data.roomId });\n          setRoomData([{ _id: data.roomId, roomNumber: data.roomNumber }]);\n          form.setFieldsValue(data);\n          setLoading(false);\n        })\n        .catch((err) => {\n          console.log('err', err);\n          setLoading(false);\n        });\n    }\n  }, [isEditUsers?.userId]);\n\n  // const fetchRoomSuggestions = async (number) => {\n  //   setLoading(true);\n\n  //   getAllRoles({})\n  //     .then((res) => {\n  //       const data = res?.data?.data;\n  //       setRoomData(data); // Update room options state with fetched data\n  //       setLoading(false);\n  //     })\n  //     .catch((error) => {\n  //       message.error('Error fetching room suggestions');\n  //       setLoading(false);\n  //     });\n  // };\n\n  return (\n    <>\n      <Spin spinning={loading}>\n        <div>\n          <Form\n            form={form}\n            name=\"User\"\n            labelCol={{\n              span: 8,\n            }}\n            wrapperCol={{\n              span: 16,\n            }}\n            onFinish={onFinish}\n            autoComplete=\"off\"\n          >\n            <Row gutter={16}>\n              {' '}\n              {/* Add gutter to provide space between columns */}\n              <Col span={12}>\n                {' '}\n                {/* Each field takes half of the row */}\n                <Form.Item\n                  label=\"Name\"\n                  name=\"name\"\n                  rules={[\n                    {\n                      required: true,\n                      message: 'Required! ',\n                    },\n                  ]}\n                >\n                  <Input />\n                </Form.Item>\n              </Col>\n              <Col span={12}>\n                <Form.Item\n                  label=\"Email\"\n                  name=\"email\"\n                  rules={[\n                    {\n                      required: true,\n                      message: 'Required! ',\n                    },\n                  ]}\n                >\n                  <Input />\n                </Form.Item>\n              </Col>\n            </Row>\n            <Row gutter={16}>\n              <Col span={12}>\n                <Form.Item label=\"phone\" name=\"phone\">\n                  <Input />\n                </Form.Item>\n              </Col>\n              <Col span={12}>\n                <Form.Item label=\"role\" name=\"role\">\n                  <Select\n                    placeholder=\"Select option...\"\n                    // onChange={onGenderChange}\n                    allowClear\n                  >\n                    <Option value=\"user\">User</Option>\n                    <Option value=\"admin\">Admin</Option>\n                  </Select>\n                </Form.Item>\n              </Col>\n            </Row>\n            <Row gutter={16}>\n              <Col span={12}>\n                <Form.Item name=\"gender\" label=\"Gender\">\n                  <Select\n                    placeholder=\"Select option...\"\n                    // onChange={onGenderChange}\n                    allowClear\n                  >\n                    <Option value=\"male\">Male</Option>\n                    <Option value=\"female\">Female</Option>\n                    <Option value=\"other\">Others</Option>\n                  </Select>\n                </Form.Item>\n              </Col>\n            </Row>\n            {!isEditUsers?.userId && (\n              <Row gutter={16}>\n                <Col span={12}>\n                  <Form.Item\n                    label=\"Password\"\n                    name=\"password\"\n                    rules={[\n                      {\n                        required: true,\n                        message: 'Required! ',\n                      },\n                    ]}\n                  >\n                    <Input />\n                  </Form.Item>\n                </Col>\n              </Row>\n            )}\n            <div className=\"flex justify-end gap-2 mt-2\">\n              <Button\n                onClick={() => {\n                  setIsAddUsers(false);\n                  setIsEditUsers({ isOpen: false, userId: '' });\n                }}\n              >\n                Cancel\n              </Button>\n              <Button type=\"primary\" htmlType=\"submit\">\n                Submit\n              </Button>\n            </div>\n          </Form>\n        </div>\n      </Spin>\n    </>\n  );\n};\n\nexport default AddOrder;\n","import { callApi } from '../apiUtils';\n\nconst addUser = async ({ body }) => {\n  const response = await callApi.post(`/users`, body);\n  return response;\n};\n\nconst getAllUser = async ({ start, limit, roleId, search }) => {\n  let roleQuery = roleId ? `&roleId=${roleId}` : '';\n  let searchQuery = search ? `&search=${search}` : '';\n  const response = await callApi.get(`/users?start=${start || 0}&limit=${limit || 10}${roleQuery}${searchQuery}`);\n  return response;\n};\n\nconst getSingleUser = async ({ id }) => {\n  const response = await callApi.get(`/users/${id}`);\n  return response;\n};\n\nconst updateUser = async ({ id, body }) => {\n  const response = await callApi.patch(`/users/${id}`, body);\n  return response;\n};\n\nconst deleteUser = async (questionId) => {\n  const response = await callApi.delete(`/users/${questionId}`);\n  return response;\n};\n\nexport { addUser, getAllUser, getSingleUser, updateUser, deleteUser };\n","import React, { useEffect, useState } from 'react';\nimport { Row, Col, Button, Table, Modal, Space, Popconfirm, message, Select, Input } from 'antd';\nimport AddUsers from './AddUsers';\nimport { GlobalUtilityStyle } from '../styled';\nimport { PageHeader } from '../../components/page-headers/page-headers';\nimport { Cards } from '../../components/cards/frame/cards-frame';\nimport { getAllUser, deleteUser } from '../../utility/services/users';\nimport { getAllRoles } from '../../utility/services/roles';\n\nconst { Search } = Input;\n\nconst Users = () => {\n  const [allUsers, setAllUsers] = useState([]);\n  const [allRoles, setAllRoles] = useState([]);\n  const [isAddUsers, setIsAddUsers] = useState(false);\n  const [isEditUsers, setIsEditUsers] = useState({});\n  const [searchValue, setSearchValue] = useState('');\n  const [statusChange, setStatusChange] = useState('');\n  const PageRoutes = [\n    {\n      path: '/',\n      breadcrumbName: 'Dashboard',\n    },\n    {\n      path: '/users',\n      breadcrumbName: 'Users',\n    },\n  ];\n\n  const getAllUsers = () => {\n    getAllUser({ search: searchValue, roleId: statusChange })\n      .then((res) => {\n        if (res) {\n          setAllUsers(res?.data?.data);\n        }\n      })\n      .catch((err) => console.log('err', err));\n  };\n\n  useEffect(() => {\n    getAllUsers();\n  }, [searchValue, statusChange]);\n  const columns = [\n    {\n      title: 'Name',\n      dataIndex: 'name',\n      key: 'name',\n      width: 150,\n    },\n    {\n      title: 'Email',\n      dataIndex: 'email',\n      key: 'email',\n      width: 200,\n    },\n    {\n      title: 'pone',\n      dataIndex: 'phone',\n      key: 'phone',\n      width: 150,\n    },\n\n    {\n      title: 'Gender',\n      dataIndex: 'gender',\n      key: 'gender',\n      width: 150,\n    },\n    {\n      title: 'Action',\n      key: 'action',\n      render: (_, record) => (\n        <Space size=\"middle\">\n          <Button\n            size=\"middle\"\n            onClick={() => {\n              setIsEditUsers({ isOpen: true, userId: record?._id });\n            }}\n          >\n            Edit\n          </Button>\n          <Popconfirm\n            title=\"Are you sure to delete this User?\"\n            onConfirm={() => {\n              deleteUser(record?._id)\n                .then((res) => {\n                  // console.log('res', res);\n                  message.success('User Deleted Successfully');\n                  getAllUsers();\n                })\n                .catch((err) => console.log('err', err));\n            }}\n            okText=\"Yes\"\n            cancelText=\"No\"\n          >\n            <Button danger size=\"middle\">\n              Delete\n            </Button>\n          </Popconfirm>\n        </Space>\n      ),\n      width: 150,\n    },\n  ];\n\n  const onSearch = (value) => {\n    setSearchValue(value);\n  };\n  const handleStatusChange = (value) => {\n    setStatusChange(value);\n  };\n\n  return (\n    <>\n      <PageHeader\n        title=\"Users\"\n        routes={PageRoutes}\n        className=\"flex items-center justify-between px-8 xl:px-[15px] pt-2 pb-6 sm:pb-[30px] bg-transparent sm:flex-col\"\n      />\n      <GlobalUtilityStyle className=\"p-3  \">\n        <Row gutter={16}>\n          <Col>\n            <Cards\n              title={\n                <div className=\"flex items-center gap-4\">\n                  <div>\n                    {/* <Select\n                      style={{\n                        width: 120,\n                      }}\n                      size=\"middle\"\n                      placeholder=\"Role\"\n                      onChange={handleStatusChange}\n                      options={allRoles}\n                    /> */}\n                  </div>\n                  <div>\n                    <Search\n                      placeholder=\"search Name or Email\"\n                      allowClear\n                      enterButton=\"Search\"\n                      size=\"middle\"\n                      onSearch={onSearch}\n                    />\n                  </div>\n                </div>\n              }\n              moreBtn={\n                <Button type=\"primary\" onClick={() => setIsAddUsers(true)}>\n                  Add\n                </Button>\n              }\n            >\n              <Table size=\"small\" scroll={{ x: '100%', y: 'auto' }} columns={columns} dataSource={allUsers} />\n            </Cards>\n          </Col>\n        </Row>\n      </GlobalUtilityStyle>\n      <Modal\n        title={isAddUsers ? 'Add Users' : 'Edit Users'}\n        destroyOnClose\n        open={isAddUsers || isEditUsers.isOpen}\n        width={1024}\n        // onOk={handleAddCmss}\n        footer={false}\n        onCancel={() => {\n          setIsAddUsers(false);\n          setIsEditUsers({ isOpen: false, userId: null });\n        }}\n      >\n        <AddUsers\n          setIsAddUsers={setIsAddUsers}\n          getAllUsers={getAllUsers}\n          isEditUsers={isEditUsers}\n          setIsEditUsers={setIsEditUsers}\n        />\n      </Modal>\n    </>\n  );\n};\n\nexport default Users;\n","import { PageHeader } from 'antd';\nimport Styled from 'styled-components';\n\nconst PageHeaderStyle = Styled(PageHeader)`\n  .ant-breadcrumb {\n    ol{\n      @media (max-width: 575px) {\n        justify-content: center;\n      }\n    }\n    li{\n        display:flex;\n        align-items:center;\n    }\n  }\n`;\n\nconst HeaderWrapper = Styled.div`\n  \n`;\n\nexport { PageHeaderStyle, HeaderWrapper };\n","import { Breadcrumb } from 'antd';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport { ReactSVG } from 'react-svg';\nimport { HeaderWrapper, PageHeaderStyle } from './style';\n\nfunction PageHeader(props) {\n  const { title, subTitle, routes, buttons, ghost, bgColor, className } = props;\n  const breadcrumb = routes ? (\n    <Breadcrumb\n      className=\"flex order-2 relative top-1.5\"\n      separator={<span className=\"inline-flex bg-light-extra relative -top-0.5 w-1 h-1 rounded-full\" />}\n    >\n      {routes.map((route, index) =>\n        index + 1 === routes.length ? (\n          <Breadcrumb.Item key={index} className=\"text-breadcrumbs dark:text-white30 text-15\">\n            {route.breadcrumbName}\n          </Breadcrumb.Item>\n        ) : (\n          <Breadcrumb.Item key={index} className=\"inline-flex items-start\">\n            <ReactSVG\n              className=\"relative top-0.5 ltr:mr-2 rtl:ml-2 [&>div>svg]:text-[#8c90a4] dark:[&>div>svg]:text-white60 \"\n              src={require(`../../static/img/icon/home.svg`).default}\n            />{' '}\n            <Link\n              to={route.path}\n              className=\"text-light hover:text-primary dark:text-[#a4a5aa] dark:hover:text-white87 text-sm\"\n            >\n              {route.breadcrumbName}\n            </Link>\n          </Breadcrumb.Item>\n        ),\n      )}\n    </Breadcrumb>\n  ) : (\n    ''\n  );\n  return (\n    <HeaderWrapper bgColor={bgColor}>\n      <PageHeaderStyle\n        className={`${className}`}\n        title={title}\n        subTitle={subTitle}\n        breadcrumb={breadcrumb}\n        extra={buttons}\n        ghost={ghost}\n      />\n    </HeaderWrapper>\n  );\n}\n\nPageHeader.propTypes = {\n  title: PropTypes.oneOfType([PropTypes.string, PropTypes.object]),\n  subTitle: PropTypes.oneOfType([PropTypes.string, PropTypes.object]),\n  bgColor: PropTypes.string,\n  className: PropTypes.string,\n  routes: PropTypes.arrayOf(PropTypes.object),\n  buttons: PropTypes.array,\n  ghost: PropTypes.bool,\n};\n\nexport { PageHeader };\n","var _path;\nfunction _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }\nimport * as React from \"react\";\nfunction SvgHome(_ref, svgRef) {\n  let {\n    title,\n    titleId,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    width: 14,\n    height: 15.574,\n    viewBox: \"0 0 14 15.574\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    id: \"estate\",\n    d: \"M16.222,6.661h0L11.555,2.57a2.333,2.333,0,0,0-3.111,0L3.778,6.661A2.333,2.333,0,0,0,3,8.419v6.8A2.333,2.333,0,0,0,5.333,17.55h9.333A2.333,2.333,0,0,0,17,15.217V8.411a2.333,2.333,0,0,0-.778-1.75Zm-4.667,9.333H8.444V12.106a.778.778,0,0,1,.778-.778h1.556a.778.778,0,0,1,.778.778Zm3.889-.778a.778.778,0,0,1-.778.778H13.111V12.106a2.333,2.333,0,0,0-2.333-2.333H9.222a2.333,2.333,0,0,0-2.333,2.333v3.889H5.333a.778.778,0,0,1-.778-.778V8.411a.778.778,0,0,1,.264-.583L9.487,3.745a.778.778,0,0,1,1.027,0L15.18,7.828a.778.778,0,0,1,.264.583Z\",\n    transform: \"translate(-3 -1.976)\",\n    fill: \"currentColor\"\n  })));\n}\nconst ForwardRef = /*#__PURE__*/React.forwardRef(SvgHome);\nexport default __webpack_public_path__ + \"static/media/home.f87e389a5c1850fe48b55156d6a0d7b7.svg\";\nexport { ForwardRef as ReactComponent };","import { Dropdown } from 'antd';\nimport Styled from 'styled-components';\n\nconst Content = Styled.div`\n    \n`;\n\nconst DropdownStyle = Styled(Dropdown)`\n\n`;\n\nexport { Content, DropdownStyle };\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport { DropdownStyle } from './dropdown-style';\nimport { GlobalUtilityStyle } from '../../container/styled';\n\nfunction Dropdown(props) {\n  const { content, placement, title, action, children, style, className } = props;\n\n  return (\n    <DropdownStyle\n      overlayClassName={className}\n      style={style}\n      placement={placement}\n      title={title}\n      overlay={<GlobalUtilityStyle>{content}</GlobalUtilityStyle>}\n      trigger={action}\n    >\n      {children}\n    </DropdownStyle>\n  );\n}\n\nconst content = (\n  <>\n    <div className=\"block bg-white dark:bg-[#1b1e2b] shadow-regular dark:shadow-[0_5px_30px_rgba(1,4,19,.40)] py-1\">\n      <Link\n        className=\"flex items-center text-theme-gray dark:text-white60 hover:bg-primary-transparent hover:text-primary dark:hover:bg-white10 px-3 py-1.5 text-sm active\"\n        to=\"#\"\n      >\n        <span>Export to CSV</span>\n      </Link>\n      <Link\n        className=\"flex items-center text-theme-gray dark:text-white60 hover:bg-primary-transparent hover:text-primary dark:hover:bg-white10 px-3 py-1.5 text-sm active\"\n        to=\"#\"\n      >\n        <span>Export to XML</span>\n      </Link>\n      <Link\n        className=\"flex items-center text-theme-gray dark:text-white60 hover:bg-primary-transparent hover:text-primary dark:hover:bg-white10 px-3 py-1.5 text-sm active\"\n        to=\"#\"\n      >\n        <span>Export to Drive</span>\n      </Link>\n    </div>\n  </>\n);\n\nDropdown.defaultProps = {\n  action: ['hover'],\n  placement: 'bottomRight',\n  content,\n  style: { DropdownStyle },\n  className: 'hexadash-dropdown',\n};\n\nDropdown.propTypes = {\n  placement: PropTypes.string,\n  title: PropTypes.string,\n  action: PropTypes.array,\n  content: PropTypes.node,\n  children: PropTypes.node,\n  style: PropTypes.object,\n  className: PropTypes.string,\n};\n\nexport { Dropdown };\n","import UilellipsisH from '@iconscout/react-unicons/icons/uil-ellipsis-h';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport { Card } from 'antd';\nimport { Dropdown } from '../../dropdown/dropdown';\nimport Heading from '../../heading/heading';\n\nfunction Cards(props) {\n  const {\n    title,\n    children,\n    more,\n    moreText,\n    size,\n    headless,\n    caption,\n    isbutton,\n    bodyStyle,\n    headStyle,\n    border,\n    bodypadding,\n    className,\n    moreBtn,\n  } = props;\n  return (\n    <>\n      {!headless ? (\n        <Card\n          size={size}\n          title={title}\n          bodyStyle={bodyStyle && bodyStyle}\n          headStyle={headStyle && headStyle}\n          bordered={border.toString()}\n          className={className}\n          bodypadding={bodypadding && bodypadding}\n          extra={\n            <div className=\"flex items-center gap-[15px]\">\n              {isbutton && isbutton}\n\n              {more && (\n                <Dropdown content={more} placement=\"bottom\">\n                  <Link className=\"flex items-center group\" onClick={(e) => e.preventDefault()} to=\"#\">\n                    {!moreText ? (\n                      <UilellipsisH className=\"w-[24px] h-[24px] text-light dark:text-white60 dark:group-hover:text-white87\" />\n                    ) : (\n                      'More'\n                    )}\n                  </Link>\n                </Dropdown>\n              )}\n              {moreBtn && <div>{moreBtn}</div>}\n            </div>\n          }\n          style={{ width: '100%' }}\n        >\n          {children}\n        </Card>\n      ) : (\n        <Card\n          bodypadding={bodypadding && bodypadding}\n          bodyStyle={bodyStyle && bodyStyle}\n          size={size}\n          style={{ width: '100%' }}\n          bordered={border.toString()}\n          className={className}\n        >\n          {title && <Heading as=\"h4\">{title}</Heading>}\n          {caption && <p>{caption}</p>}\n          {children}\n        </Card>\n      )}\n    </>\n  );\n}\n\nCards.defaultProps = {\n  border: false,\n};\n\nCards.propTypes = {\n  title: PropTypes.oneOfType([PropTypes.string, PropTypes.object, PropTypes.node]),\n  size: PropTypes.string,\n  more: PropTypes.oneOfType([PropTypes.string, PropTypes.object, PropTypes.node]),\n  moreBtn: PropTypes.oneOfType([PropTypes.string, PropTypes.object, PropTypes.node]),\n  bodyStyle: PropTypes.object,\n  headStyle: PropTypes.object,\n  isbutton: PropTypes.node,\n  headless: PropTypes.bool,\n  border: PropTypes.bool,\n  caption: PropTypes.string,\n  bodypadding: PropTypes.string,\n  className: PropTypes.string,\n  moreText: PropTypes.bool,\n  children: PropTypes.oneOfType([PropTypes.object, PropTypes.string, PropTypes.node]),\n};\n\nexport { Cards };\n"],"names":["Option","Select","_ref","setIsAddUsers","isEditUsers","setIsEditUsers","getAllUsers","loading","setLoading","useState","roomData","setRoomData","roomIdData","setRoomIdData","form","Form","useForm","useEffect","userId","async","id","_ref3","callApi","get","getSingleUser","then","res","data","_id","roomId","roomNumber","setFieldsValue","catch","err","console","log","_jsx","_Fragment","children","Spin","spinning","_jsxs","name","labelCol","span","wrapperCol","onFinish","values","body","_addUser","_ref4","patch","updateUser","isOpen","message","success","error","post","addUser","start","limit","autoComplete","Row","gutter","Col","Item","label","rules","required","Input","placeholder","allowClear","value","className","Button","onClick","type","htmlType","Search","Users","allUsers","setAllUsers","allRoles","setAllRoles","isAddUsers","searchValue","setSearchValue","statusChange","setStatusChange","roleId","search","_ref2","roleQuery","searchQuery","getAllUser","_res$data","columns","title","dataIndex","key","width","render","_","record","Space","size","Popconfirm","onConfirm","delete","questionId","deleteUser","okText","cancelText","danger","PageHeader","routes","path","breadcrumbName","GlobalUtilityStyle","Cards","enterButton","onSearch","moreBtn","Table","scroll","x","y","dataSource","Modal","destroyOnClose","open","footer","onCancel","AddUsers","PageHeaderStyle","Styled","HeaderWrapper","div","props","subTitle","buttons","ghost","bgColor","breadcrumb","Breadcrumb","separator","map","route","index","length","ReactSVG","src","require","Link","to","extra","DropdownStyle","Dropdown","content","placement","action","style","overlayClassName","overlay","trigger","defaultProps","more","moreText","headless","caption","isbutton","bodyStyle","headStyle","border","bodypadding","Card","bordered","toString","Heading","as","e","preventDefault","UilellipsisH"],"sourceRoot":""}